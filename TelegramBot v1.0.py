from telegram.ext import Updater
from telegram import ReplyKeyboardMarkup # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from datetime import datetime, timedelta, time
now = datetime.now()

updater = Updater(token='5365879922:AAE0c_4tkKTrZ3Aa23KMGbvjNDvkITkTe0o', use_context=True)

dispatcher = updater.dispatcher
job_queue = updater.job_queue #–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á (–æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ)

import logging

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

from telegram import Update
from telegram.ext import CallbackContext
from telegram.ext import CommandHandler

reply_keyboard = [['/How_it_works', '/How_to_use_this_bot'],
                  ['/Week_results', '/Imposter_syndrome_test']]

markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=False, resize_keyboard=True)

def start(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.effective_chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ï—Å–ª–∏ –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª –¥–∞–Ω–Ω—ã–π –±–æ—Ç, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –∫–∞–∫ –∏ 70% –ª—é–¥–µ–π —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å \"–°–∏–Ω–¥—Ä–æ–º–æ–º –°–∞–º–æ–∑–≤–∞–Ω—Ü–∞\". –ü—Ä–æ—Å—Ç–æ –∑–Ω–∞–π—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏ –∏ –≤–º–µ—Å—Ç–µ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —É–ª–∏—á—à–∏—Ç—å –≤–∞—à–µ –ø—Å–∏—Ö–æ—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–∞–∑–¥–µ–ª–∞–º–∏ –º–µ–Ω—é /How_it_works –∏ /How_to_use_this_bot.\n–°–ø–∞—Å–∏–±–æ –∏ —É–¥–∞—á–∏!", reply_markup=markup)
start_handler = CommandHandler('start', start)
dispatcher.add_handler(start_handler)

def wp(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.effective_chat.id, text="Ô∏è–ö–æ–Ω—Ü–µ–ø—Ü–∏—è - –ø—Ä–æ—Å—Ç–∞‚ùóÔ∏è\nüî∏–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\nüîπ–í—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –¥–µ–ª–∏—Ç–µ—Å—å —Å –±–æ—Ç–æ–º –≤–∞—à–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ (—Ä–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∏, —É—Å–ø–µ—Ö–∏ –≤ —Ö–æ–±–±–∏, –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ç.–ø.)\nüî∏–ë–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –±–µ—Ä–µ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\nüî∏–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ\n\n–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –æ—Å–Ω–æ–≤–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–∞—à–µ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏.", reply_markup=markup)
wp_handler = CommandHandler('How_it_works', wp)
dispatcher.add_handler(wp_handler)

def instruction(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.effective_chat.id, text="1Ô∏è‚É£ –û–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ = –æ–¥–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞—è —Ü–µ–ª—å –∏–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n2Ô∏è‚É£ –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ –∏ –¥–∞–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–º–∞–π–ª–∏–∫–∏ üò≥ –∏ —ç–º–æ–¥–∑–∏. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ –∫–∞–∫–æ–µ –∏–º–µ–Ω–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –º–µ–Ω—é /Week_results\n4Ô∏è‚É£ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É –≤–∞—Å –°–∏–Ω–¥—Ä–æ–º–∞ –°–∞–º–æ–∑–≤–∞–Ω—Ü–∞ –º–æ–∂–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –º–µ–Ω—é /Imposter_syndrome_test", reply_markup=markup)
instruction_handler = CommandHandler('How_to_use_this_bot', instruction)
dispatcher.add_handler(instruction_handler)

def test(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.effective_chat.id, text="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–∏–Ω–¥—Ä–æ–º–∞ —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞: https://testsonline.net/blog/psy/test-na-sindrom-samozvantsa/ \n\n–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∫–∞–∑–∞–Ω–∏–µ–º –∫ —Ç–æ–º—É, —á—Ç–æ –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ —Å–∏–Ω–¥—Ä–æ–º–æ–º —Å–∞–º–æ–∑–≤–∞–Ω—Ü–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ, –ø–æ–∂–∞—É–ª–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É, –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.", reply_markup=markup)
test_handler = CommandHandler('Imposter_syndrome_test', test)
dispatcher.add_handler(test_handler)

from telegram.ext import MessageHandler, Filters
import requests
import json

def notion_import(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.effective_chat.id, text='"' + update.message.text + '" Successfully added to Notion')  # for text reverse use [::-1]
    with open('/Users/apetrukh/PythonHW/Telegram bot/Test_JSON_2.json', 'w') as ouf: # –ü—É—Ç—å –¥–ª—è —Ö–æ—Å—Ç–∞ /home/RonDron/Test_JSON_2.json
        ouf.write('{"parent": { "database_id": "b6c859f4bfb1420cbab9eff1d4e4baf1" },"properties": {"title": {"title": [{"text": {"content":"')
        ouf.write(update.message.text)
        ouf.write('"}}]},"User_ID": {"rich_text": [{"text": {"content": "')
        ouf.write(str(update.message['chat']['id']))
        ouf.write('"}}]}}}')

    API_ENDPOINT = "https://api.notion.com/v1/pages"
    HEADERS = {"Authorization": "Bearer secret_1CVYKDIr1KNRaiot49TwRM9TCsHnLWKWCpG53lC4XPr", "Content-Type": "application/json", "Notion-Version": "2021-08-16"}
    with open('/Users/apetrukh/PythonHW/Telegram bot/Test_JSON_2.json', 'r') as f: # –ü—É—Ç—å –¥–ª—è —Ö–æ—Å—Ç–∞ /home/RonDron/Test_JSON_2.json
        DATA = json.load(f)

    r = requests.post(API_ENDPOINT, data=json.dumps(DATA), headers=HEADERS)

notion_import_handler = MessageHandler(Filters.text & (~Filters.command), notion_import)
dispatcher.add_handler(notion_import_handler)

def notion_export(update: Update, context: CallbackContext):
    goals_result = ''
    user_id_notion = ''
    user_id_bot = ''
    count = 0
    API_ENDPOINT = f'https://api.notion.com/v1/databases/b6c859f4bfb1420cbab9eff1d4e4baf1/query'
    HEADERS = {"Authorization": "Bearer secret_1CVYKDIr1KNRaiot49TwRM9TCsHnLWKWCpG53lC4XPr", "Notion-Version": "2021-08-16"}

    r = requests.post(API_ENDPOINT, headers=HEADERS)
    result_dict = r.json()

    user_id_bot = str(update.message['chat']['id']) # –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º–º
    for i in range(len(result_dict['results'])):
        user_id_notion = result_dict['results'][i]['properties']['User_ID']['rich_text'][0]['text']['content'] # –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Notion –≤ —Ñ–æ—Ä–º–∞—Ç–µ str()
        record_date = result_dict['results'][i]['properties']['Goal_completion_date']['created_time'] # –ø—Ä–∏—Å–≤–∞–µ–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ Notion
        record_date = datetime.strptime(record_date[0:len(record_date) - 1], '%Y-%m-%dT%H:%M:%S.%f') # –ø–µ—Ä–µ–≤–æ–¥–∏–º –¥–∞—Ç—É –∏–∑ Notion –≤ —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD HH:MM:SS:ffff —É–¥–∞–ª—è—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª Z
        if user_id_notion == user_id_bot and record_date >= now - timedelta(days=7):
            count += 1
            goals_result = goals_result + str(count) + '. ' + result_dict['results'][i]['properties']['Name']['title'][0]['text']['content'] + '\n'
    goals_result = goals_result + '\n–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ ' + str(count) + ' –∑–∞–¥–∞—á! –û—Ç–ª–∏—á–Ω–æ, –í—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü:)'
    context.bot.send_message(chat_id=update.effective_chat.id, text=goals_result, reply_markup=markup)

notion_export_handler = CommandHandler('Week_results', notion_export)
dispatcher.add_handler(notion_export_handler)

def callback_day(context: CallbackContext):
    id_base = []
    API_ENDPOINT = f'https://api.notion.com/v1/databases/b6c859f4bfb1420cbab9eff1d4e4baf1/query'
    HEADERS = {"Authorization": "Bearer secret_1CVYKDIr1KNRaiot49TwRM9TCsHnLWKWCpG53lC4XPr",
               "Notion-Version": "2021-08-16"}

    r = requests.post(API_ENDPOINT, headers=HEADERS)
    result_dict = r.json()

    for i in range(len(result_dict['results'])):
        user_id_notion = result_dict['results'][i]['properties']['User_ID']['rich_text'][0]['text']['content']
        if user_id_notion not in id_base:
            id_base += [user_id_notion]
    for i in range(len(id_base)):
        context.bot.send_message(chat_id=id_base[i], text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø—Ä–µ–¥–ª–∞–≥–∞—é –≤–∞–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ –º–Ω–æ–π —Å–≤–æ–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∑–∞ –¥–µ–Ω—å. –≠—Ç–æ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞—á–∏, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ç.–ø., –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Ö–≤–∞–ª–∏—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–æ–≤–µ–ª —É—Ç—Ä–µ–Ω–Ω—é—é –º–µ–¥–∏—Ç–∞—Ü–∏—é, —Å—Ö–æ–¥–∏–ª –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª, –ø–æ–º–æ–≥ —Ä–æ–¥–∏—Ç–µ–ª—è–º, –∑–∞–≤–µ—Ä—à–∏–ª –æ–±—É—á–µ–Ω–∏–µ.', reply_markup=markup)

job_day = job_queue.run_daily(callback_day, time.fromisoformat('18:00:00'))

# def caps(update: Update, context: CallbackContext): #CAPS function for the text
#    text_caps = ' '.join(context.args).upper()
#    context.bot.send_message(chat_id=update.effective_chat.id, text=text_caps)

# caps_handler = CommandHandler(caps)
# dispatcher.add_handler(caps_handler)

updater.start_polling()
updater.idle() # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã job_queue